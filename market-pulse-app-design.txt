

Requirements & Workflows: 

User Registration and Login
    Registration: Users create a new account by providing required information like name, email, and password.
    Login: Returning users log in to the application using their credentials.
    Password Recovery: In case users forget their password, they can recover or reset it (verification process).

Browsing Products
    Product Listings: Users browse the list of products available on the homepage.
    Product Search: Users use the search bar to find specific products.
    Filters: Users apply filters such as category, price range, brand, etc., to refine product searches.

Product Details
    Product Details: Clicking on a product takes users to a detailed product page with more information.
    Image Gallery: Users view all available images of the product.

Managing Shopping Cart
    Adding Products to Cart: Users add desired products to their shopping cart.
    Viewing and Modifying Cart: Users review their cart, change quantities, or remove items.
    Saving for Later: Users might have the option to save items for future purchase depending on my time limit.

Checkout Process
    Initiating Checkout: Users proceed to checkout from their cart.
    Providing Shipping Information: Users enter or confirm shipping details.
    Payment Information: Users select a payment method and provide necessary payment details.
    Reviewing Order: Users review their order, including products, shipping, and payment information before final submission.

Order Confirmation and Tracking
    Receiving Confirmation: Users receive an order confirmation with details via email(I might need an external API) or on the website.

User Account Management
    Profile Management: Users update personal information, change passwords, and manage seller portal settings.
    Order History: Users view their past orders and their statuses.

Seller Interface
    Product Listing: Sellers list new products, providing details like descriptions, pricing, and images.
    Order Management: Sellers manage orders received, including processing and shipping.
    Sales Monitoring: Sellers monitor their sales performance, view feedback, and manage inventory.


# Development Approach:

Phase 1 
    Server:
        Initialization and Configuration
            Initilize GitHub repo & npm
            Install core Dependencies: Mongoose for database interaction & other ssential packages(cors, bcrypt, jsonwebtoken, nodemon), .gitignore file.
            Server setup (express)
            README.md file to document the project setup and development instructions.
        Database Setup and Models:
            MongoDB connection using Mongoose. (MongoDB Atlas)
            Add schemas and models during each workflow
 
    Client:
        Initial Setup and Configuration
            Set up client directory structure
            Initialize npm & GitHub repo.
            README.md file to document the project setup and development instructions.
        Homepage Development
            Index.html: header, main content area, and footer.
            navigation Bar: Includes links to the main product page, user profile, cart, selling page, and logout.
            Style the homepage using a main styling file.
            Global Styles and Layout Setup

Phase 2:
    Server:
        Users registration workflow: User model, routes and controllers
        Authentication Setup: User Authentication & Protect private routes: JWT token generation and verification for user authentication.
    Client 
        Implement Register, Login, Logout Functionality
        login, register pages & auth functionality that handles the process.
        Initial Page: login/register page. New users can register, then redirect users to log in-page.
        Post-Login Redirection: Once logged in, users are redirected to the main product listing page.
        Session management implementation to keep users logged in during active sessions.
        Logout Functionality: log out users, clearing their session.
    
phase 3
    Server:
        Products workflow: Product model, route and controllers
    Client:
        Homepage and Product Listing:
        Main Page: Display all products available for sale from various sellers.
        Main Product Page (index.html): homepage is for logged-in users, product listing.
        Product Browsing Features: search and filter functionalities to allow users to easily find products.
        Product Details Page: Individual Product Detail page for individual product details & displaying more comprehensive information about each product and "Add to Cart" option


Phase 4:
    Server:
        Cart workflow: Cart model, routes and controllers
    Client:
        Cart Page: functionality for the shopping cart, allowing users to review items they've added, adjust quantities, and remove items, also accessible from the navigation bar.
        Proceed to Checkout option 

Phase 5:
    Server:
        Order and payment workflow
        Stripe integration Setup:
        Integrate Stripe for payment processing.
        Add relevant routes and logic for handling payments within the order processing flow

    Client:    
        Checkout page: checkout process functionality, including order review, shipping details, and payment option.
        Order Confirmation: Once the checkout process is complete, show an order confirmation with details and expected delivery.
        Payment processing: Stripe integration for handling transactions, using test mode for simulations.

Phase 6
    1.User Profile and Account Management:
    Server:
        Profile mgt worflow routes and controllers
    Client:
        User Profile page
        Profile Access: Via the navigation bar, which allows users to view and edit their profile information.
        Order History: Include a section for past orders and their statuses.

Phase 7
    Server:
        seller workfolw routes and controllers
    Client:
        Seller Dashboard page: to manage products, view sales, and receive notifications.
        Product Management: Options to list new products for sale, manage existing listings, and view sales history(stretch goal)


# Stretching Goal Phases:

Phase 8
    Server:
        Notification Logic 
        Alerts for important events like when a product is sold or if action is required on their listings.
        Notifications and Alerts
        System Notifications: For order confirmations, updates, and other relevant information.
        Seller Notifications: Specific alerts for sellers regarding their product listings and sales.
    Client

Phase 9 
        Server
            API Testing:
            Test each API endpoint (unit tests).
            Error Handling:
            Implement comprehensive error handling and validate user inputs across endpoints.
        Client
            Test each page and functionality.
            Responsive Design: Ensure that all pages are responsive and provide a good user experience.

Deployment Phase 
        Ensure all environment variables and configurations are set for production.
        // Conduct final testing in a production-like environment.
        //Performance Optimization and Final Touches
        //Optimize images, scripts, and styles for performance.
        //Refine UI/UX based on feedback or usability testing.